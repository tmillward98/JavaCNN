package cnn.layers.fclayers;

import java.util.ArrayList;

import cnn.layers.Layer;
import cnn.layers.neurons.Neuron;

public class FCClassifyLayer extends FLayer{

	private int classes;
	private Layer previousLayer;
	private Layer nextLayer;
	
	private ArrayList<Double> output;
	private ArrayList<Neuron> classNeurons;
	
	private double[][] outputVector;
	private double sum = 0;
	
	public double[][] initaliseLayer(int c, double[][] sampleImage){
		classes = c;
		
		return sampleImage;
	}
	
	public void assignLayer(Layer prev, Layer nl) {
		previousLayer = prev; nextLayer = nl;
	}

	public ArrayList<Double> forwardPass(){
		softmax();
		
	}
	
	private double[][] softmax() {
		for(int i = 0; i < classNeurons.size(); i++) {
			outputVector[i][0] = classNeurons.get(i).forward();
			sum += outputVector[i][0];
		}
		
		for(int i = 0; i < classNeurons.size(); i++) {
			outputVector[i][0] = outputVector[i][0] / sum;
		}
		
		
		return outputVector;
	}
	
	private void createNeurons() {
		for(int i = 0; i < classes; i++) {
			//ClassNeuron a = new ClassNeuron();
		}
	}
	
	
}