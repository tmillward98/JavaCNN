package cnn.layers.neurons;
import java.math.*;


public class ConvNeuron {

	private double[][] convMat;
	private int cov;
	private int stride;
	private int b1;
	
	/**
	 * Randomly generate extraction map
	 */
	public ConvNeuron(int covD, int s){	
		
		cov = covD;
		stride = s;
		b1 = 1;
		
		convMat = new double[covD][covD];	
		for(int i = 0; i < 3; i++) 
			for(int j = 0; j < 3; j++) 
				convMat[i][j] = Math.round(Math.random());
	}
	
	public double[][] convolveImage(double channel[][]) {
		double dotProduct = 0;
		double[][] result = new double[((channel.length - cov) / stride) + 1][((channel[0].length - cov) / stride) + 1];
		for(int i = 0; i <= (channel.length - cov); i+= stride) {
			for(int j = 0; j <= (channel[0].length - cov); j+= stride) {
				for(int x = 0; x < cov; x++) {
					for (int y = 0; y < cov; y++) {
						dotProduct = dotProduct + (convMat[x][y] * channel[x + i][y + j]);
					}
				}
				result[i / stride][j / stride] = dotProduct + b1;
				dotProduct = 0;		
			}
		}
		return result;
	}
}