package cnn.layers.neurons;

import java.util.ArrayList;

public class ClassNeuron extends Neuron {

	int vectorLength;
	String label;
	//public double[] input;
	double[] output;
	//double[] weights;
	double rc = 0;
	double b1 = 0;
	
	/**
	 * Class neuron which produces a score output that said image belongs to a class
	 */
	public ClassNeuron(String l, int n) {
		label = l;
		weights = new double[n];
		changeInWeights = new double[n];
		for (int i = 0; i < weights.length; i++) {
			weights[i] = Math.random();
			changeInWeights[i] = 0;
		}
	}
	
	public void receiveInput(double inputs) {
		System.out.println("Error, should receive multiple inputs at class layer.");
	}
	
	public void receiveInput(double[] inputs) {
		input = inputs;
	}

	public void updateWeights(double delta, double lr) {	
		for(int i = 0; i < weights.length; i++) {
			changeInWeights[i] = input[i] * delta * lr;
			//System.out.print("Change: " + changeInWeights[i] + "|");
			//System.out.print("Old weight value: " + weights[i] + "|");
			weights[i] = weights[i] + changeInWeights[i];
			//System.out.println("New weight value: " + weights[i]);
		}
	}
	
	public double forward() {
		rc = 0;
		softmax();
		return rc;
	}
	

	public double getDerivative() {
		if(rc > 0) {
			return 1;
		}
		else {
			return 0;
		}
	}

	private void softmax() {
		for(int i = 0; i < input.length; i++) {
			rc += input[i] * weights[i];
		}
		rc += b1;
		rc = Math.exp(rc);
	}
	
	
}
