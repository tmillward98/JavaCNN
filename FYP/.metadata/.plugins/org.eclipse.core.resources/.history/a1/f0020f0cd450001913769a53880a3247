package cnn.layers;

import java.util.ArrayList;
import java.util.Random;

import cnn.layers.neurons.Neuron;
import cnn.layers.neurons.SigmoidNeuron;

public class FCH extends Layer{
	
	private double[][] outputs;
	private ArrayList<double[][]> input;
	private ArrayList<double[][]> output;
	private ArrayList<Neuron> neurons;
	
	public ArrayList<double[][]> forwardPropagate(){
		input = previousLayer.forwardPropagate();
		
		return input;
	}
	
	public int getCount() {
		return neurons.size();
	}

	public ArrayList<double[][]> initialiseLayer(int c, ArrayList<double[][]> exampleInput, Layer nl, Layer pl) {
		nextLayer = nl;
		previousLayer = pl;
		
		neurons = new ArrayList<Neuron>();
		input = exampleInput;
		
		//Create a random number of neurons
		createNeurons(new Random().nextInt(100), input.get(0).length);
		
		return input;
	}
	
	private void createNeurons(int n, int w) {
		for (int i = 0; i < n; i++) {
			SigmoidNeuron a = new SigmoidNeuron(w);
			neurons.add(a);
		}
	}
}
