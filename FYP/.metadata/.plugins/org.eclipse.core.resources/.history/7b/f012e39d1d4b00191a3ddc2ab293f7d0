package cnn.layers;

import java.util.ArrayList;
import java.util.Arrays;

import cnn.layers.neurons.InputNeuron;

/**
 * Receive input, flatten volume, pass to neurons
 * @author Tom
 *
 */
public class FCInputLayer extends Layer {

	Layer previousLayer;
	ArrayList<double[][]> input;
	ArrayList<double[]> flatInput;
	ArrayList<InputNeuron> neurons;
	
	private void flattenInputs() {	
		double[] temp = new double[input.get(0).length * input.get(0)[0].length];
		
		for(int i = 0; i < input.size(); i++) {
			temp = Arrays.stream(input.get(i))
			        .flatMapToDouble(Arrays::stream)
			        .toArray();
			flatInput.add(temp);
		}
	}
	
	@Override
	public ArrayList<double[][]> forwardPropagate() {
		input = previousLayer.forwardPropagate();
		flattenInputs();
		return null;
	}

	public void assignLayer(Layer prev) {
		previousLayer = prev;
	}

	public void createNeurons() {
		
	}
	
}
